// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example::BasicExample Should match snapshoot 1`] = `
<Example
  source="
import Checkbox from 'material-toolbox/checkbox';
import FormField from 'material-toolbox/form-field';
import TextField from 'material-toolbox/textfield/TextField';
import Button from 'material-toolbox/button/Button';
import Snackbar from 'material-toolbox/snackbar';

export default class BasicExample extends React.Component {
  state = {
    text: 'Message deleted',
    action: 'Undo',
    multiline: false,
    actionOnBottom: false,
    dismissesOnAction: true,
    activeNormal: false,
    activeRTL: false,
    activeAligned: false,
    activeAlignedRTL: false,
  };

  handleChange = (evt) => {
    const { name } = evt.currentTarget;
    this.setState(state => ({
      [name]: !state[name],
    }));
  };

  handleInputChange = (evt) => {
    const { name, value } = evt.currentTarget;
    this.setState({
      [name]: value,
    });
  };

  handleClick = (evt) => {
    const { name } = evt.currentTarget;
    this.setState({
      [name]: true,
    });
  };

  handleHide = (name) => {
    this.setState({
      [name]: false,
    });
  };

  render() {
    return (
      <div>
        <div>
          <FormField label=\\"Multiline\\" htmlFor=\\"multiline\\">
            <Checkbox
              id=\\"multiline\\"
              name=\\"multiline\\"
              onChange={this.handleChange}
              checked={this.state.multiline}
            />
          </FormField>
        </div>

        <div>
          <FormField label=\\"Action On Bottom\\" htmlFor=\\"actionOnBottom\\">
            <Checkbox
              id=\\"actionOnBottom\\"
              name=\\"actionOnBottom\\"
              onChange={this.handleChange}
              checked={this.state.actionOnBottom}
              disabled={!this.state.multiline}
            />
          </FormField>
        </div>

        <div>
          <FormField label=\\"Dismiss On Action\\" htmlFor=\\"dismissesOnAction\\">
            <Checkbox
              id=\\"dismissesOnAction\\"
              name=\\"dismissesOnAction\\"
              onChange={this.handleChange}
              checked={this.state.dismissesOnAction}
            />
          </FormField>
        </div>

        <div>
          <TextField
            onChange={this.handleInputChange}
            name=\\"text\\"
            label=\\"Message Text\\"
            value={this.state.text}
          />
        </div>

        <div>
          <TextField
            onChange={this.handleInputChange}
            name=\\"action\\"
            label=\\"Action Text\\"
            value={this.state.action}
          />
        </div>

        <div>
          <Button raised onClick={this.handleClick} name=\\"activeNormal\\">
            Show
          </Button>{' '}
          &nbsp;
          <Button raised onClick={this.handleClick} name=\\"activeRTL\\">
            Show RTL
          </Button>{' '}
          &nbsp;
          <Button raised onClick={this.handleClick} name=\\"activeAligned\\">
            Show start aligned
          </Button>
          &nbsp;
          <Button raised onClick={this.handleClick} name=\\"activeAlignedRTL\\">
            Show start aligned (rtl)
          </Button>
          &nbsp;
        </div>

        <Snackbar
          message={this.state.text}
          actionText={this.state.action}
          multiline={this.state.multiline}
          dismissesOnAction={this.state.dismissesOnAction}
          actionOnBottom={this.state.actionOnBottom}
          onClick={() => {}}
          active={this.state.activeNormal}
          onHide={() => this.handleHide('activeNormal')}
        />

        <Snackbar
          message={this.state.text}
          actionText={this.state.action}
          multiline={this.state.multiline}
          dismissesOnAction={this.state.dismissesOnAction}
          actionOnBottom={this.state.actionOnBottom}
          onClick={() => {}}
          active={this.state.activeAligned}
          onHide={() => this.handleHide('activeAligned')}
          align
        />

        <div dir=\\"rtl\\">
          <Snackbar
            message={this.state.text}
            actionText={this.state.action}
            multiline={this.state.multiline}
            dismissesOnAction={this.state.dismissesOnAction}
            actionOnBottom={this.state.actionOnBottom}
            onClick={() => {}}
            active={this.state.activeRTL}
            onHide={() => this.handleHide('activeRTL')}
          />
        </div>

        <div dir=\\"rtl\\">
          <Snackbar
            message={this.state.text}
            actionText={this.state.action}
            multiline={this.state.multiline}
            dismissesOnAction={this.state.dismissesOnAction}
            actionOnBottom={this.state.actionOnBottom}
            onClick={() => {}}
            active={this.state.activeAlignedRTL}
            onHide={() => this.handleHide('activeAlignedRTL')}
            align
          />
        </div>
      </div>
    );
  }
}"
  title="Basic Example"
>
  <div>
    <FormField
      alignEnd={false}
      cssOnly={false}
      htmlFor="multiline"
      label="Multiline"
    >
      <Checkbox
        checked={false}
        cssOnly={false}
        disabled={false}
        id="multiline"
        indeterminate={false}
        name="multiline"
        onChange={[Function]}
      />
    </FormField>
  </div>
  <div>
    <FormField
      alignEnd={false}
      cssOnly={false}
      htmlFor="actionOnBottom"
      label="Action On Bottom"
    >
      <Checkbox
        checked={false}
        cssOnly={false}
        disabled={true}
        id="actionOnBottom"
        indeterminate={false}
        name="actionOnBottom"
        onChange={[Function]}
      />
    </FormField>
  </div>
  <div>
    <FormField
      alignEnd={false}
      cssOnly={false}
      htmlFor="dismissesOnAction"
      label="Dismiss On Action"
    >
      <Checkbox
        checked={true}
        cssOnly={false}
        disabled={false}
        id="dismissesOnAction"
        indeterminate={false}
        name="dismissesOnAction"
        onChange={[Function]}
      />
    </FormField>
  </div>
  <div>
    <TextField
      box={false}
      cssOnly={false}
      dense={false}
      disabled={false}
      fullWidth={false}
      invalid={false}
      label="Message Text"
      multiline={false}
      name="text"
      onChange={[Function]}
      outlined={false}
      persistentHelperText={false}
      validationHelperText={false}
      value="Message deleted"
    />
  </div>
  <div>
    <TextField
      box={false}
      cssOnly={false}
      dense={false}
      disabled={false}
      fullWidth={false}
      invalid={false}
      label="Action Text"
      multiline={false}
      name="action"
      onChange={[Function]}
      outlined={false}
      persistentHelperText={false}
      validationHelperText={false}
      value="Undo"
    />
  </div>
  <div>
    <Button
      component="button"
      name="activeNormal"
      onClick={[Function]}
      raised={true}
    >
      Show
    </Button>
     
     
    <Button
      component="button"
      name="activeRTL"
      onClick={[Function]}
      raised={true}
    >
      Show RTL
    </Button>
     
     
    <Button
      component="button"
      name="activeAligned"
      onClick={[Function]}
      raised={true}
    >
      Show start aligned
    </Button>
     
    <Button
      component="button"
      name="activeAlignedRTL"
      onClick={[Function]}
      raised={true}
    >
      Show start aligned (rtl)
    </Button>
     
  </div>
  <Snackbar
    actionOnBottom={false}
    actionText="Undo"
    active={false}
    align={false}
    dismissesOnAction={true}
    message="Message deleted"
    multiline={false}
    onClick={[Function]}
    onHide={[Function]}
    timeout={2750}
  />
  <Snackbar
    actionOnBottom={false}
    actionText="Undo"
    active={false}
    align={true}
    dismissesOnAction={true}
    message="Message deleted"
    multiline={false}
    onClick={[Function]}
    onHide={[Function]}
    timeout={2750}
  />
  <div
    dir="rtl"
  >
    <Snackbar
      actionOnBottom={false}
      actionText="Undo"
      active={false}
      align={false}
      dismissesOnAction={true}
      message="Message deleted"
      multiline={false}
      onClick={[Function]}
      onHide={[Function]}
      timeout={2750}
    />
  </div>
  <div
    dir="rtl"
  >
    <Snackbar
      actionOnBottom={false}
      actionText="Undo"
      active={false}
      align={true}
      dismissesOnAction={true}
      message="Message deleted"
      multiline={false}
      onClick={[Function]}
      onHide={[Function]}
      timeout={2750}
    />
  </div>
</Example>
`;
